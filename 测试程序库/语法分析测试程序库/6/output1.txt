CONSTTK const
INTTK int
IDENFR pi
ASSIGN =
INTCON 3
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR a
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR b
ASSIGN =
INTCON 20
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR signed_B
ASSIGN =
PLUS +
INTCON 20
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR minus_B
ASSIGN =
MINU -
INTCON 20
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR c
ASSIGN =
CHARCON c
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR var1
COMMA ,
IDENFR char1
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR var2
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR var3
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR var4
COMMA ,
IDENFR var5
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR var6
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR var7
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 2
<无符号整数>
<整数>
<常量>
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR var8
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 2
<无符号整数>
<整数>
<常量>
RBRACE }
COMMA ,
LBRACE {
INTCON 3
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 4
<无符号整数>
<整数>
<常量>
RBRACE }
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
<变量说明>
INTTK int
IDENFR addMult
<声明头部>
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR s
<参数表>
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR one
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR c
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
IDENFR c
ASSIGN =
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR c
ASSIGN =
MINU -
IDENFR a
<因子>
<项>
PLUS +
IDENFR b
<因子>
DIV /
IDENFR one
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
IDENFR c
<因子>
MULT *
IDENFR s
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR printChar
<声明头部>
LPARENT (
CHARTK char
IDENFR a
<参数表>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR hello
LPARENT (
<参数表>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON hello world!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
INTTK int
IDENFR isPositive
<声明头部>
LPARENT (
INTTK int
IDENFR num
<参数表>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR num
<因子>
<项>
<表达式>
GRE >
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
ELSETK else
RETURNTK return
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR readNwrite
LPARENT (
<参数表>
RPARENT )
LBRACE {
CHARTK char
IDENFR input
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
SCANFTK scanf
LPARENT (
IDENFR input
RPARENT )
<读语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON input:
<字符串>
COMMA ,
IDENFR input
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR signal
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR array
LBRACK [
INTCON 10
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR ar
LBRACK [
INTCON 10
<无符号整数>
RBRACK ]
LBRACK [
INTCON 10
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON 18231091
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR addMult
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
COMMA ,
IDENFR b
<因子>
<项>
<表达式>
COMMA ,
IDENFR signed_B
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
SEMICN ;
<语句>
IDENFR printChar
LPARENT (
IDENFR c
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
SEMICN ;
<语句>
IDENFR hello
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
IDENFR readNwrite
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
IDENFR signal
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR signal
ASSIGN =
MINU -
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR signal
ASSIGN =
PLUS +
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR signal
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR signal
<因子>
<项>
<表达式>
EQL ==
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
IDENFR signal
ASSIGN =
IDENFR signal
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR signal
<因子>
<项>
<表达式>
LSS <
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR signal
ASSIGN =
IDENFR signal
<因子>
<项>
PLUS +
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR signal
<因子>
<项>
<表达式>
LEQ <=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
IDENFR signal
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
ELSETK else
LBRACE {
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IDENFR array
LBRACK [
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR ar
LBRACK [
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
SWITCHTK switch
LPARENT (
IDENFR signal
<因子>
<项>
<表达式>
RPARENT )
LBRACE {
CASETK case
INTCON 1
<无符号整数>
<整数>
<常量>
COLON :
PRINTFTK printf
LPARENT (
IDENFR signal
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<情况子语句>
CASETK case
INTCON 2
<无符号整数>
<整数>
<常量>
COLON :
PRINTFTK printf
LPARENT (
STRCON 2
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<情况子语句>
<情况表>
DEFAULTTK default
COLON :
PRINTFTK printf
LPARENT (
STRCON KO
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<缺省>
RBRACE }
<情况语句>
<语句>
SWITCHTK switch
LPARENT (
IDENFR signal
<因子>
<项>
<表达式>
RPARENT )
LBRACE {
CASETK case
INTCON 1
<无符号整数>
<整数>
<常量>
COLON :
PRINTFTK printf
LPARENT (
STRCON 1
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<情况子语句>
<情况表>
DEFAULTTK default
COLON :
PRINTFTK printf
LPARENT (
STRCON KO
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<缺省>
RBRACE }
<情况语句>
<语句>
WHILETK while
LPARENT (
IDENFR signal
<因子>
<项>
<表达式>
GEQ >=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR signal
ASSIGN =
IDENFR signal
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR signal
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR signal
<因子>
<项>
<表达式>
NEQ !=
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR signal
ASSIGN =
IDENFR signal
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
IDENFR signal
ASSIGN =
IDENFR signal
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR signal
ASSIGN =
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR signal
<因子>
<项>
<表达式>
GRE >
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR signal
ASSIGN =
IDENFR signal
MINU -
INTCON 1
<无符号整数>
<步长>
RPARENT )
SEMICN ;
<语句>
<循环语句>
<语句>
IDENFR signal
ASSIGN =
IDENFR signal
<因子>
<项>
PLUS +
IDENFR array
LBRACK [
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
PLUS +
IDENFR ar
LBRACK [
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
PLUS +
LPARENT (
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
PLUS +
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
PLUS +
CHARCON c
<因子>
<项>
PLUS +
IDENFR isPositive
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
