CONSTTK const
INTTK int
IDENFR a
ASSIGN =
PLUS +
INTCON 1
<无符号整数>
<整数>
COMMA ,
IDENFR b
ASSIGN =
MINU -
INTCON 2
<无符号整数>
<整数>
COMMA ,
IDENFR c
ASSIGN =
INTCON 3
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
INTTK int
IDENFR d
ASSIGN =
INTCON 108
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR c1
ASSIGN =
CHARCON _
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR c2
ASSIGN =
CHARCON 1
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR Cc1
ASSIGN =
CHARCON A
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR Cc2
ASSIGN =
CHARCON +
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR Cc3
ASSIGN =
CHARCON /
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR x
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR y
LBRACK [
INTCON 15
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR z
LBRACK [
INTCON 13
<无符号整数>
RBRACK ]
LBRACK [
INTCON 16
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR xx
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR yy
LBRACK [
INTCON 5
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 2
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 3
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 4
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 5
<无符号整数>
<整数>
<常量>
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR zz
LBRACK [
INTCON 3
<无符号整数>
RBRACK ]
LBRACK [
INTCON 3
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 2
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 3
<无符号整数>
<整数>
<常量>
RBRACE }
COMMA ,
LBRACE {
INTCON 2
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 3
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 4
<无符号整数>
<整数>
<常量>
RBRACE }
COMMA ,
LBRACE {
INTCON 3
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 4
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 5
<无符号整数>
<整数>
<常量>
RBRACE }
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
<变量说明>
INTTK int
IDENFR cmp
<声明头部>
LPARENT (
INTTK int
IDENFR x
COMMA ,
INTTK int
IDENFR y
<参数表>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
LSS <
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
MINU -
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
LEQ <=
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
EQL ==
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
GRE >
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
GEQ >=
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
NEQ !=
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
ELSETK else
LBRACE {
RETURNTK return
LPARENT (
MINU -
INTCON 100
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
MINU -
INTCON 100
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR print1
LPARENT (
INTTK int
IDENFR x
<参数表>
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR z
ASSIGN =
INTCON 5
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR y
ASSIGN =
INTCON 2
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
<变量说明>
IDENFR x
ASSIGN =
IDENFR x
<因子>
<项>
PLUS +
IDENFR y
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR x
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
PLUS +
IDENFR x
<因子>
MULT *
IDENFR y
<因子>
MULT *
INTCON 3
<无符号整数>
<整数>
<因子>
MULT *
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR x
ASSIGN =
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
PLUS +
IDENFR x
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR x
ASSIGN =
IDENFR x
<因子>
<项>
MINU -
IDENFR y
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR x
ASSIGN =
IDENFR y
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
IDENFR print2
LPARENT (
<参数表>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON hello world
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
IDENFR print3
LPARENT (
CHARTK char
IDENFR x
<参数表>
RPARENT )
LBRACE {
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
CHARTK char
IDENFR get
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
CHARCON a
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
COMMA ,
IDENFR j
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR s
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR n
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON 18373114
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR cmp
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
COMMA ,
IDENFR b
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LEQ <=
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IDENFR y
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR i
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
GEQ >=
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IDENFR j
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR j
<因子>
<项>
<表达式>
LEQ <=
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR z
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
IDENFR j
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR j
ASSIGN =
IDENFR j
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LEQ <=
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR j
<因子>
<项>
<表达式>
LEQ <=
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
IDENFR s
ASSIGN =
IDENFR s
<因子>
<项>
PLUS +
IDENFR z
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
IDENFR j
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<循环语句>
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON answer is 
<字符串>
COMMA ,
IDENFR s
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR n
RPARENT )
<读语句>
SEMICN ;
<语句>
SWITCHTK switch
LPARENT (
IDENFR n
<因子>
<项>
<表达式>
RPARENT )
LBRACE {
CASETK case
INTCON 1
<无符号整数>
<整数>
<常量>
COLON :
PRINTFTK printf
LPARENT (
STRCON 1
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<情况子语句>
CASETK case
INTCON 2
<无符号整数>
<整数>
<常量>
COLON :
PRINTFTK printf
LPARENT (
STRCON 2
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<情况子语句>
CASETK case
INTCON 3
<无符号整数>
<整数>
<常量>
COLON :
PRINTFTK printf
LPARENT (
STRCON 3
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<情况子语句>
<情况表>
DEFAULTTK default
COLON :
PRINTFTK printf
LPARENT (
STRCON default
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<缺省>
RBRACE }
<情况语句>
<语句>
SCANFTK scanf
LPARENT (
IDENFR n
RPARENT )
<读语句>
SEMICN ;
<语句>
SWITCHTK switch
LPARENT (
IDENFR n
<因子>
<项>
<表达式>
RPARENT )
LBRACE {
CASETK case
INTCON 1
<无符号整数>
<整数>
<常量>
COLON :
PRINTFTK printf
LPARENT (
STRCON 1
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<情况子语句>
<情况表>
DEFAULTTK default
COLON :
PRINTFTK printf
LPARENT (
STRCON default
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<缺省>
RBRACE }
<情况语句>
<语句>
IDENFR print1
LPARENT (
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
IDENFR print2
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR n
RPARENT )
<读语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR n
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON the
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON end
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
