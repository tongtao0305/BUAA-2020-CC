INTTK int
IDENFR c
COMMA ,
IDENFR d
LBRACK [
INTCON 1
<无符号整数>
RBRACK ]
COMMA ,
IDENFR dd
LBRACK [
INTCON 1
<无符号整数>
RBRACK ]
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR e
ASSIGN =
CHARCON 5
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR ee
LBRACK [
INTCON 1
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
INTCON 3
<无符号整数>
<整数>
<常量>
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR eee
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
INTCON 3
<无符号整数>
<整数>
<常量>
COMMA ,
PLUS +
INTCON 4
<无符号整数>
<整数>
<常量>
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR f
ASSIGN =
INTCON 4
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR g
LBRACK [
INTCON 1
<无符号整数>
RBRACK ]
LBRACK [
INTCON 1
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
<无符号整数>
<整数>
<常量>
RBRACE }
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR gg
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
LBRACK [
INTCON 3
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 2
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 4
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 5
<无符号整数>
<整数>
<常量>
RBRACE }
COMMA ,
LBRACE {
INTCON 3
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 4
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 7
<无符号整数>
<整数>
<常量>
RBRACE }
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
<变量说明>
INTTK int
IDENFR H
<声明头部>
LPARENT (
CHARTK char
IDENFR hi
<参数表>
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR a
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
RETURNTK return
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR h_h
<声明头部>
LPARENT (
INTTK int
IDENFR hj
COMMA ,
CHARTK char
IDENFR ko
<参数表>
RPARENT )
LBRACE {
CONSTTK const
CHARTK char
IDENFR b
ASSIGN =
CHARCON 1
COMMA ,
IDENFR bb
ASSIGN =
CHARCON 2
<常量定义>
SEMICN ;
<常量说明>
RETURNTK return
LPARENT (
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR hhh
LPARENT (
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR c
COMMA ,
IDENFR d
LBRACK [
INTCON 1
<无符号整数>
RBRACK ]
COMMA ,
IDENFR dd
LBRACK [
INTCON 1
<无符号整数>
RBRACK ]
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON 18373528
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR k
ASSIGN =
MINU -
INTCON 432
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR zzz
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR a1
LBRACK [
INTCON 1
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR a2
LBRACK [
INTCON 1
<无符号整数>
RBRACK ]
LBRACK [
INTCON 1
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
IDENFR a1
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR a2
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR hhh
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR zzz
RPARENT )
<读语句>
SEMICN ;
<语句>
IDENFR zzz
ASSIGN =
CHARCON +
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR zzz
ASSIGN =
CHARCON *
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR k
ASSIGN =
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR k
<因子>
<项>
<表达式>
GRE >
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON asd%c*+22
<字符串>
COMMA ,
IDENFR e
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR k
ASSIGN =
IDENFR k
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR k
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR k
<因子>
<项>
<表达式>
LEQ <=
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR k
ASSIGN =
IDENFR k
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR k
<因子>
MULT *
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR k
ASSIGN =
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR k
<因子>
<项>
<表达式>
GEQ >=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR k
ASSIGN =
IDENFR k
MINU -
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON %d
<字符串>
COMMA ,
IDENFR k
<因子>
MULT *
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
IFTK if
LPARENT (
IDENFR k
<因子>
<项>
<表达式>
NEQ !=
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR k
ASSIGN =
IDENFR k
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR k
<因子>
<项>
<表达式>
EQL ==
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR k
ASSIGN =
IDENFR H
LPARENT (
CHARCON h
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR k
ASSIGN =
IDENFR k
<因子>
<项>
MINU -
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
SWITCHTK switch
LPARENT (
PLUS +
IDENFR k
<因子>
DIV /
INTCON 1
<无符号整数>
<整数>
<因子>
MULT *
IDENFR ee
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
IDENFR k
<因子>
<项>
PLUS +
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
LBRACE {
CASETK case
INTCON 1
<无符号整数>
<整数>
<常量>
COLON :
IDENFR k
ASSIGN =
IDENFR k
<因子>
MULT *
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<情况子语句>
CASETK case
INTCON 2
<无符号整数>
<整数>
<常量>
COLON :
IDENFR k
ASSIGN =
IDENFR k
<因子>
<项>
MINU -
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<情况子语句>
<情况表>
DEFAULTTK default
COLON :
IDENFR k
ASSIGN =
IDENFR k
<因子>
<项>
MINU -
INTCON 9
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<缺省>
RBRACE }
<情况语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
