VOIDTK void
IDENFR basiccheck
LPARENT (
<参数表>
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR q
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR x
COMMA ,
IDENFR X_
COMMA ,
IDENFR x1
<变量定义无初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR s1
ASSIGN =
CHARCON +
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR s2
ASSIGN =
CHARCON *
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR s3
ASSIGN =
CHARCON a
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR s4
ASSIGN =
CHARCON 0
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
<变量说明>
IDENFR x
ASSIGN =
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR X_
ASSIGN =
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR x1
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR x
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
MULT *
INTCON 1
<无符号整数>
<整数>
<因子>
DIV /
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
INTTK int
IDENFR onlySentences
<声明头部>
LPARENT (
INTTK int
IDENFR x
<参数表>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR onlyemptySentences
LPARENT (
INTTK int
IDENFR x
COMMA ,
INTTK int
IDENFR y
<参数表>
RPARENT )
LBRACE {
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
INTTK int
IDENFR exp_assign_callcheck
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR x1
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 0
<无符号整数>
<整数>
<常量>
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR x2
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 0
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 0
<无符号整数>
<整数>
<常量>
RBRACE }
COMMA ,
LBRACE {
INTCON 0
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 0
<无符号整数>
<整数>
<常量>
RBRACE }
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR x
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
IDENFR x
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR x1
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
PLUS +
IDENFR x
<因子>
<项>
MINU -
CHARCON a
<因子>
MULT *
IDENFR onlySentences
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR x2
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
MINU -
IDENFR x1
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
PLUS +
IDENFR x2
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
DIV /
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR basiccheck
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
IDENFR onlyemptySentences
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
IDENFR x2
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR if_emptycheck
<声明头部>
LPARENT (
INTTK int
IDENFR x
COMMA ,
INTTK int
IDENFR y
<参数表>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
EQL ==
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
IDENFR x
ASSIGN =
IDENFR x
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
ELSETK else
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
LSS <
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
GRE >
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
<语句列>
RBRACE }
<语句>
ELSETK else
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
GEQ >=
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
SEMICN ;
<语句>
ELSETK else
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
LEQ <=
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
IDENFR x
ASSIGN =
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
ELSETK else
IFTK if
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
NEQ !=
IDENFR y
<因子>
<项>
<表达式>
<条件>
RPARENT )
IDENFR x
ASSIGN =
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<条件语句>
<语句>
<条件语句>
<语句>
<条件语句>
<语句>
<条件语句>
<语句>
<条件语句>
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR loopcheck
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
<变量说明>
WHILETK while
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
LEQ <=
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
IDENFR i
ASSIGN =
IDENFR i
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
GRE >
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
<无符号整数>
<步长>
RPARENT )
SEMICN ;
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LEQ <=
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
SEMICN ;
<语句>
<循环语句>
<语句>
RETURNTK return
LPARENT (
CHARCON a
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR switchcheck
<声明头部>
LPARENT (
CHARTK char
IDENFR z
<参数表>
RPARENT )
LBRACE {
SWITCHTK switch
LPARENT (
IDENFR z
<因子>
<项>
<表达式>
RPARENT )
LBRACE {
CASETK case
CHARCON a
<常量>
COLON :
SEMICN ;
<语句>
<情况子语句>
CASETK case
CHARCON b
<常量>
COLON :
SEMICN ;
<语句>
<情况子语句>
<情况表>
DEFAULTTK default
COLON :
SEMICN ;
<语句>
<缺省>
RBRACE }
<情况语句>
<语句>
SWITCHTK switch
LPARENT (
IDENFR z
<因子>
<项>
<表达式>
RPARENT )
LBRACE {
CASETK case
CHARCON a
<常量>
COLON :
RETURNTK return
LPARENT (
CHARCON a
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<情况子语句>
<情况表>
DEFAULTTK default
COLON :
RETURNTK return
LPARENT (
CHARCON b
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<缺省>
RBRACE }
<情况语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR x
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
SCANFTK scanf
LPARENT (
IDENFR x
RPARENT )
<读语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON 18374472
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON onlySentences(x)=
<字符串>
COMMA ,
IDENFR onlySentences
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON exp_assign_callcheck()=
<字符串>
COMMA ,
IDENFR exp_assign_callcheck
LPARENT (
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON if_emptycheck(x,0)=
<字符串>
COMMA ,
IDENFR if_emptycheck
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
COMMA ,
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON loopcheck()=
<字符串>
COMMA ,
IDENFR loopcheck
LPARENT (
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON switchcheck('b')=
<字符串>
COMMA ,
IDENFR switchcheck
LPARENT (
CHARCON b
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON x
<字符串>
COMMA ,
IDENFR x
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
