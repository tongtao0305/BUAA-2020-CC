INTTK int
IDENFR boo
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR foo
<声明头部>
LPARENT (
INTTK int
IDENFR a
COMMA ,
CHARTK char
IDENFR b
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR c
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
RETURNTK return
LPARENT (
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR err
LPARENT (
<参数表>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON something went wrong in if statement
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR int_initialized_1
ASSIGN =
INTCON 12
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR int_initialized_2
LBRACK [
INTCON 3
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 2
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 3
<无符号整数>
<整数>
<常量>
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR int_initialized_3
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
LBRACK [
INTCON 3
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 2
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 3
<无符号整数>
<整数>
<常量>
RBRACE }
COMMA ,
LBRACE {
INTCON 4
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 5
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 6
<无符号整数>
<整数>
<常量>
RBRACE }
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR char_initialized_1
ASSIGN =
CHARCON r
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR char_initialized_2
LBRACK [
INTCON 3
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
CHARCON a
<常量>
COMMA ,
CHARCON b
<常量>
COMMA ,
CHARCON c
<常量>
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR char_initialized_3
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
LBRACK [
INTCON 3
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
CHARCON d
<常量>
COMMA ,
CHARCON e
<常量>
COMMA ,
CHARCON f
<常量>
RBRACE }
COMMA ,
LBRACE {
CHARCON x
<常量>
COMMA ,
CHARCON y
<常量>
COMMA ,
CHARCON z
<常量>
RBRACE }
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR j
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR ch
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON 78066014
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
GEQ >=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON int_initialized_1 = 
<字符串>
COMMA ,
IDENFR int_initialized_1
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
IDENFR err
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR j
<因子>
<项>
<表达式>
LEQ <=
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON int_initialized_2[0] = 
<字符串>
COMMA ,
IDENFR int_initialized_2
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
IDENFR err
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
GRE >
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON int_initialized_2[2] = 
<字符串>
COMMA ,
IDENFR int_initialized_2
LBRACK [
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
IDENFR err
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR j
<因子>
<项>
<表达式>
LSS <
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON char_initialized_3[0][0] = 
<字符串>
COMMA ,
IDENFR char_initialized_3
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
IDENFR err
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
NEQ !=
IDENFR j
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON char_initialized_3[1][2] = 
<字符串>
COMMA ,
IDENFR char_initialized_3
LBRACK [
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
IDENFR err
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
SCANFTK scanf
LPARENT (
IDENFR ch
RPARENT )
<读语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON newly scanned char ch : 
<字符串>
COMMA ,
IDENFR ch
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR i
RPARENT )
<读语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON newly scanned int i : 
<字符串>
COMMA ,
IDENFR i
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON boo 
<字符串>
COMMA ,
IDENFR boo
LPARENT (
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON foo 
<字符串>
COMMA ,
IDENFR foo
LPARENT (
INTCON 90
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
CHARCON a
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
