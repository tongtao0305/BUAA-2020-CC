CONSTTK const
INTTK int
IDENFR lqw
ASSIGN =
PLUS +
INTCON 917
<无符号整数>
<整数>
COMMA ,
IDENFR hjf
ASSIGN =
MINU -
INTCON 924
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR A
ASSIGN =
CHARCON a
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR bArray
LBRACK [
INTCON 6
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR cArrays
LBRACK [
INTCON 10
<无符号整数>
RBRACK ]
LBRACK [
INTCON 100
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR d
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR eArray
LBRACK [
INTCON 3
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
INTCON 6
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 7
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 8
<无符号整数>
<整数>
<常量>
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR fArray
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
LBRACK [
INTCON 5
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 0
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 1
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 2
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 3
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 4
<无符号整数>
<整数>
<常量>
RBRACE }
COMMA ,
LBRACE {
INTCON 9
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 8
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 7
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 6
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 5
<无符号整数>
<整数>
<常量>
RBRACE }
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
<变量说明>
INTTK int
IDENFR func1
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR f_a
ASSIGN =
INTCON 999
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR f_b
ASSIGN =
INTCON 666
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
<变量说明>
WHILETK while
LPARENT (
IDENFR f_b
<因子>
<项>
<表达式>
LSS <
IDENFR f_a
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR f_b
ASSIGN =
IDENFR f_b
<因子>
<项>
PLUS +
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
RETURNTK return
LPARENT (
IDENFR f_b
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR func2
<声明头部>
LPARENT (
INTTK int
IDENFR p
<参数表>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
MINU -
IDENFR p
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
CHARCON a
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR func3
<声明头部>
LPARENT (
CHARTK char
IDENFR p1
COMMA ,
INTTK int
IDENFR p2
COMMA ,
CHARTK char
IDENFR p3
<参数表>
RPARENT )
LBRACE {
IFTK if
LPARENT (
PLUS +
IDENFR p1
<因子>
<项>
PLUS +
IDENFR p2
<因子>
<项>
PLUS +
IDENFR p3
<因子>
<项>
<表达式>
LEQ <=
INTCON 100
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON p1 + p2 + p3 = 
<字符串>
COMMA ,
IDENFR p1
<因子>
<项>
PLUS +
IDENFR p2
<因子>
<项>
PLUS +
IDENFR p3
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
IDENFR p1
<因子>
<项>
PLUS +
IDENFR p2
<因子>
<项>
PLUS +
IDENFR p3
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON 17005014
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR d
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR A
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LSS <
INTCON 6
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IDENFR bArray
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR i
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR bArray
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR d
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR d
<因子>
<项>
<表达式>
LSS <
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR d
ASSIGN =
IDENFR d
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR eArray
LBRACK [
IDENFR d
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR d
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR d
<因子>
<项>
<表达式>
GRE >
MINU -
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR d
ASSIGN =
IDENFR d
MINU -
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
IDENFR d
<因子>
<项>
PLUS +
IDENFR hjf
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR d
<因子>
<项>
<表达式>
GEQ >=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
<语句列>
RBRACE }
<语句>
ELSETK else
IDENFR fArray
LBRACK [
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<条件语句>
<语句>
FORTK for
LPARENT (
IDENFR d
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR d
<因子>
<项>
<表达式>
LSS <
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR d
ASSIGN =
IDENFR d
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LSS <
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
PRINTFTK printf
LPARENT (
IDENFR fArray
LBRACK [
IDENFR d
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<循环语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
IDENFR func1
LPARENT (
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
PLUS +
IDENFR func2
LPARENT (
INTCON 668
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
PLUS +
IDENFR func3
LPARENT (
CHARCON 2
<因子>
<项>
<表达式>
COMMA ,
MINU -
INTCON 80
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
CHARCON 1
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
MULT *
IDENFR lqw
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
