CONSTTK const
INTTK int
IDENFR MAXN
ASSIGN =
PLUS +
INTCON 10007
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
CHARTK char
IDENFR _
ASSIGN =
CHARCON *
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR par
LBRACK [
INTCON 10007
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
INTTK int
IDENFR findpar
<声明头部>
LPARENT (
INTTK int
IDENFR p
<参数表>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR par
LBRACK [
IDENFR p
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
NEQ !=
IDENFR p
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR par
LBRACK [
IDENFR p
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR findpar
LPARENT (
IDENFR par
LBRACK [
IDENFR p
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
IDENFR par
LBRACK [
IDENFR p
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR getcc
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
CHARCON 0
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR hello
LPARENT (
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR aaa
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON HelloWorld
<字符串>
COMMA ,
PLUS +
INTCON 114514
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
IDENFR hellobye
LPARENT (
INTTK int
IDENFR a1
COMMA ,
INTTK int
IDENFR a2
COMMA ,
INTTK int
IDENFR a3
<参数表>
RPARENT )
LBRACE {
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
IDENFR test
LPARENT (
<参数表>
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR mod
ASSIGN =
INTCON 107
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
CHARTK char
IDENFR aaaa
ASSIGN =
CHARCON +
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR bbb
ASSIGN =
CHARCON a
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON a function with no return;
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR n
COMMA ,
IDENFR m
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR i
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR z
COMMA ,
IDENFR x
COMMA ,
IDENFR y
<变量定义无初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR c
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON 18373142
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR n
RPARENT )
<读语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR m
RPARENT )
<读语句>
SEMICN ;
<语句>
IDENFR hellobye
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
IDENFR hello
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
LSS <
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
SEMICN ;
<语句>
<循环语句>
<语句>
WHILETK while
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
GEQ >=
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
SEMICN ;
<语句>
<循环语句>
<语句>
WHILETK while
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
NEQ !=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
SEMICN ;
<语句>
<循环语句>
<语句>
IFTK if
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
EQL ==
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
SEMICN ;
<语句>
<条件语句>
<语句>
LBRACE {
<语句列>
RBRACE }
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
DIV /
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LEQ <=
IDENFR n
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IDENFR par
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR i
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
IDENFR m
<因子>
MULT *
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
GRE >
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
SCANFTK scanf
LPARENT (
IDENFR z
RPARENT )
<读语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR x
RPARENT )
<读语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR y
RPARENT )
<读语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR z
<因子>
<项>
<表达式>
EQL ==
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR par
LBRACK [
IDENFR findpar
LPARENT (
IDENFR y
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR findpar
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
IFTK if
LPARENT (
IDENFR findpar
LPARENT (
IDENFR x
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
EQL ==
IDENFR findpar
LPARENT (
IDENFR y
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<条件>
RPARENT )
IDENFR c
ASSIGN =
CHARCON Y
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
ELSETK else
IDENFR c
ASSIGN =
CHARCON N
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<条件语句>
<语句>
PRINTFTK printf
LPARENT (
IDENFR c
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
