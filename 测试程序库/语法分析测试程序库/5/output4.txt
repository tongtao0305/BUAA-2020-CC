CONSTTK const
INTTK int
IDENFR firstVar
ASSIGN =
INTCON 18373692
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR _myLucky
ASSIGN =
CHARCON Z
COMMA ,
IDENFR my12
ASSIGN =
CHARCON a
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR secondVar
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
INTTK int
IDENFR calculateSome
<声明头部>
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR temp
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR nothing
COMMA ,
IDENFR blank
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR result
LBRACK [
INTCON 5
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR all
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
LBRACK [
INTCON 4
<无符号整数>
RBRACK ]
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
IDENFR temp
ASSIGN =
IDENFR a
<因子>
<项>
PLUS +
IDENFR b
<因子>
<项>
MINU -
IDENFR c
<因子>
MULT *
IDENFR a
<因子>
DIV /
IDENFR b
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR result
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR temp
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR all
LBRACK [
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
LBRACK [
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR temp
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
IDENFR temp
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR substractChar
<声明头部>
LPARENT (
CHARTK char
IDENFR input
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR t
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR result
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR oneArray
LBRACK [
INTCON 3
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 0
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 0
<无符号整数>
<整数>
<常量>
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR twoArray
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
LBRACK [
INTCON 2
<无符号整数>
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 0
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 0
<无符号整数>
<整数>
<常量>
RBRACE }
COMMA ,
LBRACE {
INTCON 0
<无符号整数>
<整数>
<常量>
COMMA ,
INTCON 0
<无符号整数>
<整数>
<常量>
RBRACE }
RBRACE }
<变量定义及初始化>
<变量定义>
SEMICN ;
<变量说明>
RETURNTK return
LPARENT (
IDENFR input
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR getRandNum
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
INTCON 123
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR blank_func
LPARENT (
<参数表>
RPARENT )
LBRACE {
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
IDENFR blank
LPARENT (
<参数表>
RPARENT )
LBRACE {
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR p
ASSIGN =
PLUS +
INTCON 1
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR q
ASSIGN =
INTCON 2
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR m
ASSIGN =
INTCON 3
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR store
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR Giorni
<变量定义无初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR j
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR l
ASSIGN =
MINU -
INTCON 3
<无符号整数>
<整数>
<常量>
<变量定义及初始化>
<变量定义>
SEMICN ;
INTTK int
IDENFR n
<变量定义无初始化>
<变量定义>
SEMICN ;
CHARTK char
IDENFR s
<变量定义无初始化>
<变量定义>
SEMICN ;
<变量说明>
IDENFR s
ASSIGN =
IDENFR substractChar
LPARENT (
CHARCON c
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR store
ASSIGN =
IDENFR calculateSome
LPARENT (
IDENFR p
<因子>
<项>
<表达式>
COMMA ,
IDENFR q
<因子>
<项>
<表达式>
COMMA ,
IDENFR m
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON 18373692
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR p
<因子>
<项>
<表达式>
LSS <
IDENFR store
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON I'm the first line
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR q
<因子>
<项>
<表达式>
LEQ <=
IDENFR store
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON b is no greater than store
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON b is greater than store
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
IDENFR n
ASSIGN =
IDENFR l
<因子>
<项>
PLUS +
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR n
ASSIGN =
IDENFR l
<因子>
MULT *
INTCON 3
<无符号整数>
<整数>
<因子>
MULT *
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR blank_func
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
IDENFR Giorni
ASSIGN =
MINU -
IDENFR p
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
MINU -
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR Giorni
ASSIGN =
IDENFR Giorni
<因子>
<项>
PLUS +
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR Giorni
<因子>
<项>
<表达式>
GEQ >=
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR Giorni
ASSIGN =
IDENFR Giorni
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON I Giorni!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
IFTK if
LPARENT (
IDENFR Giorni
<因子>
<项>
<表达式>
EQL ==
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
SEMICN ;
<语句>
<条件语句>
<语句>
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR j
<因子>
<项>
<表达式>
GRE >
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
MINU -
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Ludovico yyds!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR j
<因子>
<项>
<表达式>
LSS <
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Prelude!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON fairytale!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON Berlin song!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON Nefeli!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
