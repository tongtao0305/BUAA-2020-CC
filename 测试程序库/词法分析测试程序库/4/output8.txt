CONSTTK const
INTTK int
IDENFR a
ASSIGN =
INTCON 1
SEMICN ;
CONSTTK const
CHARTK char
IDENFR hi
ASSIGN =
CHARCON h
COMMA ,
IDENFR plus
ASSIGN =
CHARCON +
SEMICN ;
INTTK int
IDENFR i_0
ASSIGN =
PLUS +
INTCON 1
SEMICN ;
INTTK int
IDENFR i_1
ASSIGN =
MINU -
INTCON 1
SEMICN ;
CHARTK char
IDENFR k1
ASSIGN =
CHARCON k
SEMICN ;
INTTK int
IDENFR return_0
LPARENT (
INTTK int
IDENFR input_0
COMMA ,
INTTK int
IDENFR input_1
RPARENT )
LBRACE {
INTTK int
IDENFR Add
ASSIGN =
INTCON 5
SEMICN ;
INTTK int
IDENFR output
SEMICN ;
IDENFR output
ASSIGN =
MINU -
LPARENT (
IDENFR input_0
PLUS +
IDENFR input_1
RPARENT )
SEMICN ;
RETURNTK return
LPARENT (
MINU -
IDENFR output
PLUS +
INTCON 10
MULT *
INTCON 1
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR empty
LPARENT (
RPARENT )
LBRACE {
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
CHARTK char
IDENFR mult
ASSIGN =
CHARCON *
SEMICN ;
CONSTTK const
CHARTK char
IDENFR num
ASSIGN =
CHARCON 1
SEMICN ;
INTTK int
IDENFR i
COMMA ,
IDENFR j
SEMICN ;
CHARTK char
IDENFR t
SEMICN ;
INTTK int
IDENFR array_1
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
RBRACE }
SEMICN ;
INTTK int
IDENFR array_2
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
COMMA ,
LBRACE {
INTCON 3
COMMA ,
INTCON 4
RBRACE }
RBRACE }
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18182681
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR hi
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
MINU -
IDENFR a
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR a
MULT *
INTCON 6
PLUS +
INTCON 3
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR return_0
LPARENT (
IDENFR i_0
COMMA ,
IDENFR i_1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR array_1
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR array_2
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
IDENFR j
ASSIGN =
IDENFR return_0
LPARENT (
IDENFR i
COMMA ,
INTCON 3
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR j
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR t
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON Input:
COMMA ,
IDENFR t
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
SEMICN ;
IFTK if
LPARENT (
IDENFR i
GRE >
INTCON 1
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
