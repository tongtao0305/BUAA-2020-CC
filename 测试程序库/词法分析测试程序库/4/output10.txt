CONSTTK const
INTTK int
IDENFR chang1
ASSIGN =
INTCON 0
COMMA ,
IDENFR chang2
ASSIGN =
INTCON 1
SEMICN ;
CONSTTK const
CHARTK char
IDENFR chang3
ASSIGN =
CHARCON y
SEMICN ;
INTTK int
IDENFR bian
ASSIGN =
PLUS +
INTCON 1
SEMICN ;
CHARTK char
IDENFR bianliang1
COMMA ,
IDENFR bianliang2
SEMICN ;
INTTK int
IDENFR haveIntRe
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON I'm a function with return value! no parameter
RPARENT )
SEMICN ;
RETURNTK return
LPARENT (
INTCON 0
RPARENT )
SEMICN ;
RBRACE }
CHARTK char
IDENFR haveCharRe
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
IDENFR chang3
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR noReturn
LPARENT (
INTTK int
IDENFR a
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
CHARTK char
IDENFR m
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON I'm a function without return value! function with one parameter, one constant description, one variable declaration
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
VOIDTK void
IDENFR two_Parameters
LPARENT (
INTTK int
IDENFR a
COMMA ,
CHARTK char
IDENFR c
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON The function with two parameters
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR kong
LPARENT (
RPARENT )
LBRACE {
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a
ASSIGN =
MINU -
INTCON 1
SEMICN ;
INTTK int
IDENFR b
ASSIGN =
PLUS +
INTCON 3
SEMICN ;
INTTK int
IDENFR c
COMMA ,
IDENFR d
SEMICN ;
CHARTK char
IDENFR e
ASSIGN =
CHARCON +
SEMICN ;
CHARTK char
IDENFR f
ASSIGN =
CHARCON *
SEMICN ;
CHARTK char
IDENFR g
ASSIGN =
CHARCON 1
SEMICN ;
INTTK int
IDENFR arr1
LBRACK [
INTCON 5
RBRACK ]
SEMICN ;
INTTK int
IDENFR arr2
LBRACK [
INTCON 5
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
COMMA ,
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
COMMA ,
INTCON 40
RBRACE }
SEMICN ;
INTTK int
IDENFR arr3
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 3
RBRACK ]
SEMICN ;
INTTK int
IDENFR arr4
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 0
COMMA ,
INTCON 1
COMMA ,
INTCON 2
RBRACE }
COMMA ,
LBRACE {
INTCON 3
COMMA ,
INTCON 4
COMMA ,
INTCON 5
RBRACE }
RBRACE }
SEMICN ;
CHARTK char
IDENFR bl
SEMICN ;
IDENFR bl
ASSIGN =
CHARCON x
SEMICN ;
IDENFR c
ASSIGN =
IDENFR a
PLUS +
LPARENT (
IDENFR a
PLUS +
IDENFR b
RPARENT )
MULT *
IDENFR b
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18373189
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON program with constant description, variable declaration
RPARENT )
SEMICN ;
IDENFR d
ASSIGN =
IDENFR haveIntRe
LPARENT (
RPARENT )
SEMICN ;
IDENFR haveCharRe
LPARENT (
RPARENT )
SEMICN ;
IDENFR noReturn
LPARENT (
IDENFR bian
RPARENT )
SEMICN ;
IDENFR two_Parameters
LPARENT (
IDENFR a
COMMA ,
IDENFR bl
RPARENT )
SEMICN ;
IDENFR kong
LPARENT (
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR bl
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON printf1
COMMA ,
IDENFR a
PLUS +
IDENFR b
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a
PLUS +
IDENFR b
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 8
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 9
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 10
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
