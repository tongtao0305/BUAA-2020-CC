CHARTK char
IDENFR getC
LPARENT (
RPARENT )
LBRACE {
CHARTK char
IDENFR ch
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR ch
RPARENT )
SEMICN ;
RETURNTK return
LPARENT (
IDENFR ch
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR read
LPARENT (
RPARENT )
LBRACE {
CHARTK char
IDENFR ch
SEMICN ;
INTTK int
IDENFR ok
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR r
ASSIGN =
INTCON 1
SEMICN ;
INTTK int
IDENFR n
ASSIGN =
INTCON 0
SEMICN ;
IDENFR ch
ASSIGN =
IDENFR getC
LPARENT (
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
IDENFR ok
NEQ !=
INTCON 1
RPARENT )
LBRACE {
IFTK if
LPARENT (
LPARENT (
IDENFR ch
RPARENT )
GEQ >=
LPARENT (
CHARCON 0
RPARENT )
RPARENT )
LBRACE {
IFTK if
LPARENT (
LPARENT (
IDENFR ch
RPARENT )
LEQ <=
LPARENT (
CHARCON 9
RPARENT )
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
PLUS +
INTCON 1
SEMICN ;
RBRACE }
RBRACE }
IFTK if
LPARENT (
IDENFR ok
NEQ !=
INTCON 1
RPARENT )
LBRACE {
IFTK if
LPARENT (
LPARENT (
IDENFR ch
RPARENT )
EQL ==
LPARENT (
CHARCON -
RPARENT )
RPARENT )
LBRACE {
IDENFR r
ASSIGN =
MINU -
INTCON 1
SEMICN ;
RBRACE }
IDENFR ch
ASSIGN =
IDENFR getC
LPARENT (
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
IDENFR ok
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR ok
NEQ !=
INTCON 1
RPARENT )
LBRACE {
IFTK if
LPARENT (
LPARENT (
IDENFR ch
RPARENT )
LSS <
LPARENT (
CHARCON 0
RPARENT )
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
IFTK if
LPARENT (
LPARENT (
IDENFR ch
RPARENT )
GRE >
LPARENT (
CHARCON 9
RPARENT )
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR ok
NEQ !=
INTCON 1
RPARENT )
LBRACE {
IDENFR n
ASSIGN =
IDENFR n
MULT *
INTCON 10
PLUS +
IDENFR ch
MINU -
CHARCON 0
SEMICN ;
IDENFR ch
ASSIGN =
IDENFR getC
LPARENT (
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
RETURNTK return
LPARENT (
IDENFR r
MULT *
IDENFR n
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR N
ASSIGN =
INTCON 10
SEMICN ;
CONSTTK const
CHARTK char
IDENFR ddd
ASSIGN =
CHARCON /
SEMICN ;
INTTK int
IDENFR a_b_c
ASSIGN =
INTCON 100
SEMICN ;
INTTK int
IDENFR a
COMMA ,
IDENFR b
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18373806
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR ddd
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a_b_c
RPARENT )
SEMICN ;
IDENFR a_b_c
ASSIGN =
IDENFR a_b_c
DIV /
INTCON 10
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a_b_c
RPARENT )
SEMICN ;
IDENFR a
ASSIGN =
IDENFR read
LPARENT (
RPARENT )
SEMICN ;
IDENFR b
ASSIGN =
IDENFR read
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR b
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a
PLUS +
IDENFR b
RPARENT )
SEMICN ;
SWITCHTK switch
LPARENT (
IDENFR a_b_c
RPARENT )
LBRACE {
CASETK case
INTCON 10
COLON :
LBRACE {
PRINTFTK printf
LPARENT (
STRCON hahaha
RPARENT )
SEMICN ;
RBRACE }
DEFAULTTK default
COLON :
PRINTFTK printf
LPARENT (
STRCON heiheihie
RPARENT )
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON EOP
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON EOP
RPARENT )
SEMICN ;
RBRACE }
