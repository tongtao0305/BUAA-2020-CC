CONSTTK const
CHARTK char
IDENFR temp
ASSIGN =
CHARCON t
COMMA ,
IDENFR temppp
ASSIGN =
CHARCON s
SEMICN ;
INTTK int
IDENFR a
COMMA ,
IDENFR b
SEMICN ;
CHARTK char
IDENFR aa
SEMICN ;
CHARTK char
IDENFR bb
SEMICN ;
INTTK int
IDENFR c
ASSIGN =
INTCON 10
SEMICN ;
CHARTK char
IDENFR __
ASSIGN =
CHARCON +
SEMICN ;
CHARTK char
IDENFR ___
ASSIGN =
CHARCON *
SEMICN ;
CHARTK char
IDENFR ____
ASSIGN =
CHARCON 1
SEMICN ;
CHARTK char
IDENFR _
ASSIGN =
CHARCON c
SEMICN ;
INTTK int
IDENFR judge1
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
INTTK int
IDENFR aaa
ASSIGN =
INTCON 1
SEMICN ;
INTTK int
IDENFR ccc
SEMICN ;
IFTK if
LPARENT (
IDENFR a
EQL ==
IDENFR b
RPARENT )
RETURNTK return
LPARENT (
IDENFR a
PLUS +
IDENFR b
RPARENT )
SEMICN ;
ELSETK else
RETURNTK return
LPARENT (
IDENFR a
MINU -
IDENFR b
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR nothing2
LPARENT (
RPARENT )
LBRACE {
RBRACE }
CHARTK char
IDENFR judge2
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
IDENFR nothing2
LPARENT (
RPARENT )
SEMICN ;
RETURNTK return
LPARENT (
IDENFR temp
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR same
LPARENT (
INTTK int
IDENFR a
RPARENT )
LBRACE {
CONSTTK const
CHARTK char
IDENFR tempppp
ASSIGN =
CHARCON z
SEMICN ;
RETURNTK return
LPARENT (
IDENFR a
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR nothing1
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR zzzz
ASSIGN =
INTCON 0
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18373489
RPARENT )
SEMICN ;
IDENFR aa
ASSIGN =
CHARCON a
SEMICN ;
IDENFR bb
ASSIGN =
CHARCON b
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR a
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR b
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR a
GEQ >=
IDENFR b
RPARENT )
IDENFR nothing2
LPARENT (
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR a
GRE >
IDENFR b
RPARENT )
IDENFR nothing2
LPARENT (
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR a
LEQ <=
IDENFR b
RPARENT )
IDENFR nothing2
LPARENT (
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR a
LSS <
IDENFR b
RPARENT )
IDENFR nothing2
LPARENT (
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR a
NEQ !=
IDENFR b
RPARENT )
IDENFR nothing2
LPARENT (
RPARENT )
SEMICN ;
IDENFR c
ASSIGN =
IDENFR judge1
LPARENT (
IDENFR a
COMMA ,
IDENFR b
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR b
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR c
RPARENT )
SEMICN ;
IDENFR _
ASSIGN =
IDENFR judge2
LPARENT (
IDENFR a
COMMA ,
IDENFR b
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR aa
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR bb
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR _
RPARENT )
SEMICN ;
IDENFR nothing1
LPARENT (
RPARENT )
SEMICN ;
IDENFR nothing2
LPARENT (
RPARENT )
SEMICN ;
IDENFR c
ASSIGN =
IDENFR same
LPARENT (
IDENFR c
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR c
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a
PLUS +
LPARENT (
MINU -
IDENFR b
RPARENT )
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR a
PLUS +
IDENFR b
RPARENT )
SEMICN ;
RBRACE }
