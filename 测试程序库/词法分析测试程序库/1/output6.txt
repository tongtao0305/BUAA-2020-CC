CONSTTK const
INTTK int
IDENFR Value
ASSIGN =
INTCON 10
SEMICN ;
CONSTTK const
CHARTK char
IDENFR c
ASSIGN =
CHARCON c
SEMICN ;
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR n
COMMA ,
IDENFR i
COMMA ,
IDENFR j
COMMA ,
IDENFR k
SEMICN ;
INTTK int
IDENFR a
LBRACK [
INTCON 10
RBRACK ]
LBRACK [
INTCON 10
RBRACK ]
COMMA ,
IDENFR b
LBRACK [
INTCON 10
RBRACK ]
LBRACK [
INTCON 10
RBRACK ]
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18373420
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 2
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 3
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 4
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 5
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 6
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 7
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 8
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR n
RPARENT )
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
IDENFR i
LEQ <=
IDENFR n
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
SCANFTK scanf
LPARENT (
IDENFR k
RPARENT )
SEMICN ;
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR k
SEMICN ;
RBRACE }
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
LPARENT (
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
MULT *
IDENFR a
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR b
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
RBRACE }
