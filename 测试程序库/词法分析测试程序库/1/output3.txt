VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR N
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 4
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 2
COMMA ,
INTCON 3
COMMA ,
INTCON 4
RBRACE }
COMMA ,
LBRACE {
INTCON 5
COMMA ,
INTCON 6
COMMA ,
INTCON 7
COMMA ,
INTCON 8
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR i
COMMA ,
IDENFR j
SEMICN ;
IFTK if
LPARENT (
IDENFR N
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
EQL ==
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON 18231210
RPARENT )
SEMICN ;
RBRACE }
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
INTCON 2
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
IDENFR j
LSS <
INTCON 4
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
RPARENT )
LBRACE {
SWITCHTK switch
LPARENT (
IDENFR N
LBRACK [
IDENFR i
RBRACK ]
LBRACK [
IDENFR j
RBRACK ]
RPARENT )
LBRACE {
CASETK case
INTCON 1
COLON :
PRINTFTK printf
LPARENT (
INTCON 1
RPARENT )
SEMICN ;
CASETK case
INTCON 2
COLON :
PRINTFTK printf
LPARENT (
INTCON 2
RPARENT )
SEMICN ;
CASETK case
INTCON 3
COLON :
PRINTFTK printf
LPARENT (
INTCON 3
RPARENT )
SEMICN ;
CASETK case
INTCON 4
COLON :
PRINTFTK printf
LPARENT (
INTCON 4
RPARENT )
SEMICN ;
CASETK case
INTCON 5
COLON :
PRINTFTK printf
LPARENT (
INTCON 5
RPARENT )
SEMICN ;
CASETK case
INTCON 6
COLON :
PRINTFTK printf
LPARENT (
INTCON 6
RPARENT )
SEMICN ;
CASETK case
INTCON 7
COLON :
PRINTFTK printf
LPARENT (
INTCON 7
RPARENT )
SEMICN ;
DEFAULTTK default
COLON :
PRINTFTK printf
LPARENT (
INTCON 8
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
RBRACE }
SWITCHTK switch
LPARENT (
IDENFR N
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
LBRACE {
CASETK case
INTCON 1
COLON :
IDENFR N
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
INTCON 0
SEMICN ;
DEFAULTTK default
COLON :
IDENFR N
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR N
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
NEQ !=
INTCON 2
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON finish
RPARENT )
SEMICN ;
RBRACE }
RBRACE }
