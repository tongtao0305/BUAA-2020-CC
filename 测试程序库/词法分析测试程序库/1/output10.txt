INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
VOIDTK void
IDENFR return_i
LPARENT (
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON 18182681
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON A
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR i
GEQ >=
INTCON 0
RPARENT )
PRINTFTK printf
LPARENT (
IDENFR i
PLUS +
INTCON 1
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR i
LSS <
INTCON 0
RPARENT )
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
ELSETK else
PRINTFTK printf
LPARENT (
STRCON false
RPARENT )
SEMICN ;
IDENFR return_i
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
SWITCHTK switch
LPARENT (
IDENFR i
RPARENT )
LBRACE {
CASETK case
INTCON 0
COLON :
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
DEFAULTTK default
COLON :
PRINTFTK printf
LPARENT (
STRCON default_0
RPARENT )
SEMICN ;
RBRACE }
IDENFR return_i
LPARENT (
RPARENT )
SEMICN ;
SWITCHTK switch
LPARENT (
IDENFR i
RPARENT )
LBRACE {
CASETK case
INTCON 0
COLON :
IDENFR i
ASSIGN =
PLUS +
IDENFR i
PLUS +
INTCON 1
SEMICN ;
CASETK case
INTCON 1
COLON :
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
DEFAULTTK default
COLON :
PRINTFTK printf
LPARENT (
STRCON default_1
RPARENT )
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON inset_0
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON inset_1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON inset_2
RPARENT )
SEMICN ;
RBRACE }
