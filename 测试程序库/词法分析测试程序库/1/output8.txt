CONSTTK const
INTTK int
IDENFR global_c
ASSIGN =
INTCON 1
COMMA ,
IDENFR global_d
ASSIGN =
MINU -
INTCON 20
SEMICN ;
INTTK int
IDENFR global_e
ASSIGN =
PLUS +
INTCON 20
SEMICN ;
VOIDTK void
IDENFR func4
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR only
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR func4
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 17374216
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON %
COMMA ,
IDENFR global_c
PLUS +
IDENFR global_d
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON %
COMMA ,
IDENFR global_c
PLUS +
IDENFR global_e
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON %
COMMA ,
IDENFR global_e
PLUS +
IDENFR global_d
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON %
COMMA ,
IDENFR global_c
MINU -
IDENFR global_d
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON %
COMMA ,
IDENFR global_c
MULT *
IDENFR global_d
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON %
COMMA ,
IDENFR global_c
DIV /
IDENFR global_d
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON %
COMMA ,
IDENFR global_e
MULT *
IDENFR global_d
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON %
COMMA ,
IDENFR global_e
DIV /
IDENFR global_d
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON %
COMMA ,
IDENFR global_c
MULT *
IDENFR global_e
RPARENT )
SEMICN ;
RBRACE }
