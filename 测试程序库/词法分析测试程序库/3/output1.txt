CONSTTK const
CHARTK char
IDENFR t
ASSIGN =
CHARCON t
SEMICN ;
CHARTK char
IDENFR c
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
CHARCON k
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR print
LPARENT (
INTTK int
IDENFR input
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR input
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR array_1
LBRACK [
INTCON 5
RBRACK ]
SEMICN ;
INTTK int
IDENFR array_2
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
SEMICN ;
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR out
ASSIGN =
INTCON 0
SEMICN ;
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LEQ <=
INTCON 4
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
IDENFR array_1
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
IDENFR i
SEMICN ;
RBRACE }
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
IDENFR i
GEQ >=
INTCON 0
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
RPARENT )
LBRACE {
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
IDENFR j
LSS <
INTCON 2
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
RPARENT )
LBRACE {
IDENFR array_2
LBRACK [
IDENFR i
RBRACK ]
LBRACK [
IDENFR j
RBRACK ]
ASSIGN =
IDENFR i
MULT *
IDENFR j
SEMICN ;
RBRACE }
RBRACE }
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18182681
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
INTCON 5
RPARENT )
LBRACE {
IDENFR out
ASSIGN =
IDENFR array_1
LBRACK [
IDENFR i
RBRACK ]
SEMICN ;
IDENFR print
LPARENT (
IDENFR out
RPARENT )
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR i
LSS <
INTCON 2
RPARENT )
LBRACE {
WHILETK while
LPARENT (
IDENFR j
LSS <
INTCON 2
RPARENT )
LBRACE {
IDENFR out
ASSIGN =
IDENFR array_2
LBRACK [
IDENFR i
RBRACK ]
LBRACK [
IDENFR j
RBRACK ]
SEMICN ;
IDENFR print
LPARENT (
IDENFR out
RPARENT )
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
RBRACE }
IDENFR i
ASSIGN =
IDENFR i
DIV /
INTCON 2
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
CHARCON a
SEMICN ;
RBRACE }
