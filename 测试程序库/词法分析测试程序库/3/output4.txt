CONSTTK const
INTTK int
IDENFR zdfvv
ASSIGN =
MINU -
INTCON 7890
SEMICN ;
CONSTTK const
CHARTK char
IDENFR dadong
ASSIGN =
CHARCON s
SEMICN ;
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR shenmegui
COMMA ,
IDENFR biaodashi
COMMA ,
IDENFR i
COMMA ,
IDENFR j
COMMA ,
IDENFR l
COMMA ,
IDENFR m
COMMA ,
IDENFR n
SEMICN ;
INTTK int
IDENFR k
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR xianshibao
LBRACK [
INTCON 69
RBRACK ]
LBRACK [
INTCON 69
RBRACK ]
COMMA ,
IDENFR segui
LBRACK [
INTCON 9
RBRACK ]
LBRACK [
INTCON 9
RBRACK ]
COMMA ,
IDENFR laosepi
LBRACK [
INTCON 2333
RBRACK ]
SEMICN ;
INTTK int
IDENFR lsp
SEMICN ;
CHARTK char
IDENFR dickdon
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
CHARCON l
COMMA ,
CHARCON s
COMMA ,
CHARCON p
RBRACE }
SEMICN ;
INTTK int
IDENFR DickDong
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
PLUS +
INTCON 69
COMMA ,
MINU -
INTCON 69
RBRACE }
COMMA ,
LBRACE {
MINU -
INTCON 69
COMMA ,
PLUS +
INTCON 69
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR balala
ASSIGN =
INTCON 233
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR lsp
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR shenmegui
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18373008
RPARENT )
SEMICN ;
IDENFR biaodashi
ASSIGN =
LPARENT (
IDENFR lsp
PLUS +
IDENFR lsp
RPARENT )
MULT *
IDENFR shenmegui
PLUS +
IDENFR shenmegui
MINU -
IDENFR zdfvv
PLUS +
IDENFR lsp
DIV /
IDENFR shenmegui
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR biaodashi
RPARENT )
SEMICN ;
IDENFR biaodashi
ASSIGN =
IDENFR biaodashi
MULT *
IDENFR biaodashi
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR biaodashi
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
IDENFR biaodashi
GRE >
IDENFR lsp
RPARENT )
LBRACE {
IDENFR lsp
ASSIGN =
IDENFR lsp
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IDENFR j
ASSIGN =
IDENFR shenmegui
SEMICN ;
IFTK if
LPARENT (
IDENFR j
EQL ==
IDENFR shenmegui
RPARENT )
LBRACE {
IDENFR k
ASSIGN =
IDENFR zdfvv
MULT *
IDENFR dickdon
LBRACK [
INTCON 2
RBRACK ]
MULT *
IDENFR DickDong
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
IDENFR k
RPARENT )
SEMICN ;
SWITCHTK switch
LPARENT (
IDENFR dickdon
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
LBRACE {
CASETK case
CHARCON l
COLON :
PRINTFTK printf
LPARENT (
STRCON quite old!
RPARENT )
SEMICN ;
CASETK case
CHARCON s
COLON :
PRINTFTK printf
LPARENT (
STRCON quite se!
RPARENT )
SEMICN ;
CASETK case
CHARCON p
COLON :
PRINTFTK printf
LPARENT (
STRCON quite pi!
RPARENT )
SEMICN ;
DEFAULTTK default
COLON :
PRINTFTK printf
LPARENT (
STRCON I am not lsp!!!
RPARENT )
SEMICN ;
RBRACE }
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
INTCON 4
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR i
PLUS +
INTCON 6
RPARENT )
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON test3 end!
RPARENT )
SEMICN ;
RBRACE }
