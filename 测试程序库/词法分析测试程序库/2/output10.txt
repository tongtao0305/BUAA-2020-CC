INTTK int
IDENFR s0
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
COMMA ,
INTCON 1
RBRACE }
COMMA ,
LBRACE {
INTCON 1
COMMA ,
INTCON 1
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR s1
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 1
RBRACE }
SEMICN ;
CHARTK char
IDENFR s2
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
CHARCON a
COMMA ,
CHARCON a
RBRACE }
SEMICN ;
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 1
SEMICN ;
INTTK int
IDENFR j
ASSIGN =
INTCON 2
SEMICN ;
INTTK int
IDENFR k
ASSIGN =
INTCON 3
SEMICN ;
INTTK int
IDENFR m
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR n
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR r1
COMMA ,
IDENFR r2
SEMICN ;
CHARTK char
IDENFR ss
SEMICN ;
IDENFR s2
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
CHARCON A
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR ss
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18231215
RPARENT )
SEMICN ;
IDENFR m
ASSIGN =
IDENFR i
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR m
RPARENT )
SEMICN ;
IDENFR m
ASSIGN =
PLUS +
IDENFR i
PLUS +
IDENFR i
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR m
RPARENT )
SEMICN ;
IDENFR m
ASSIGN =
MINU -
IDENFR i
PLUS +
IDENFR j
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR m
RPARENT )
SEMICN ;
IDENFR m
ASSIGN =
IDENFR i
MULT *
IDENFR i
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR m
RPARENT )
SEMICN ;
IDENFR m
ASSIGN =
IDENFR s1
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
IDENFR n
ASSIGN =
IDENFR s0
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
SEMICN ;
IDENFR m
ASSIGN =
IDENFR i
PLUS +
LPARENT (
MINU -
IDENFR j
RPARENT )
SEMICN ;
IDENFR m
ASSIGN =
INTCON 0
SEMICN ;
IDENFR n
ASSIGN =
INTCON 0
SEMICN ;
IFTK if
LPARENT (
IDENFR i
LSS <
IDENFR j
RPARENT )
SEMICN ;
ELSETK else
IDENFR i
ASSIGN =
IDENFR i
PLUS +
IDENFR m
SEMICN ;
SWITCHTK switch
LPARENT (
IDENFR i
RPARENT )
LBRACE {
CASETK case
INTCON 1
COLON :
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
DEFAULTTK default
COLON :
IDENFR i
ASSIGN =
IDENFR k
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
SWITCHTK switch
LPARENT (
IDENFR j
RPARENT )
LBRACE {
CASETK case
INTCON 0
COLON :
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
CASETK case
INTCON 1
COLON :
IDENFR j
ASSIGN =
INTCON 1
SEMICN ;
CASETK case
INTCON 2
COLON :
IDENFR j
ASSIGN =
INTCON 3
SEMICN ;
DEFAULTTK default
COLON :
IDENFR j
ASSIGN =
MINU -
INTCON 1
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
IDENFR j
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18231215
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18231215
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18231215
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
