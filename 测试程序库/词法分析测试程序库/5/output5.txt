CONSTTK const
INTTK int
IDENFR num1
ASSIGN =
INTCON 10
SEMICN ;
INTTK int
IDENFR num2
SEMICN ;
CHARTK char
IDENFR func1
LPARENT (
RPARENT )
LBRACE {
CHARTK char
IDENFR s
ASSIGN =
CHARCON e
SEMICN ;
RETURNTK return
LPARENT (
IDENFR s
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR func2
LPARENT (
INTTK int
IDENFR a
RPARENT )
LBRACE {
INTTK int
IDENFR m
SEMICN ;
IDENFR m
ASSIGN =
IDENFR a
MULT *
INTCON 1
SEMICN ;
RETURNTK return
LPARENT (
IDENFR m
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR func3
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
RPARENT )
LBRACE {
RETURNTK return
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
CHARTK char
IDENFR a
ASSIGN =
CHARCON a
COMMA ,
IDENFR b
ASSIGN =
CHARCON b
COMMA ,
IDENFR sym1
ASSIGN =
CHARCON +
COMMA ,
IDENFR sym2
ASSIGN =
CHARCON *
SEMICN ;
INTTK int
IDENFR num3
COMMA ,
IDENFR num4
SEMICN ;
INTTK int
IDENFR num5
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR array1
LBRACK [
INTCON 5
RBRACK ]
SEMICN ;
INTTK int
IDENFR numnull_
SEMICN ;
INTTK int
IDENFR Name
SEMICN ;
INTTK int
IDENFR i
SEMICN ;
CHARTK char
IDENFR sym3
COMMA ,
IDENFR sym4
COMMA ,
IDENFR c
SEMICN ;
IDENFR num4
ASSIGN =
INTCON 4
SEMICN ;
IDENFR num2
ASSIGN =
INTCON 0
SEMICN ;
IDENFR c
ASSIGN =
IDENFR a
SEMICN ;
IDENFR sym4
ASSIGN =
IDENFR sym1
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR num3
RPARENT )
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
INTCON 10
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
LBRACE {
RBRACE }
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 4
SEMICN ;
IDENFR i
GEQ >=
INTCON 0
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
RPARENT )
LBRACE {
IDENFR array1
LBRACK [
IDENFR i
RBRACK ]
ASSIGN =
IDENFR i
SEMICN ;
RBRACE }
WHILETK while
LPARENT (
IDENFR num4
EQL ==
INTCON 4
RPARENT )
LBRACE {
IDENFR num4
ASSIGN =
IDENFR num4
PLUS +
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR num3
LEQ <=
INTCON 1
RPARENT )
LBRACE {
IDENFR Name
ASSIGN =
IDENFR num4
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR num3
GRE >
INTCON 1
RPARENT )
LBRACE {
IDENFR num4
ASSIGN =
IDENFR num3
PLUS +
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
SEMICN ;
RBRACE }
IDENFR sym3
ASSIGN =
CHARCON d
SEMICN ;
IDENFR i
ASSIGN =
IDENFR func2
LPARENT (
IDENFR num3
RPARENT )
SEMICN ;
IDENFR func3
LPARENT (
IDENFR num4
COMMA ,
IDENFR num3
RPARENT )
SEMICN ;
IDENFR sym3
ASSIGN =
IDENFR func1
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
INTCON 18182605
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON abc
COMMA ,
MINU -
INTCON 1
PLUS +
INTCON 1
PLUS +
INTCON 1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON abc
COMMA ,
PLUS +
INTCON 1
MULT *
INTCON 1
MULT *
INTCON 1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
INTCON 1
MULT *
INTCON 1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
INTCON 1
PLUS +
INTCON 1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
INTCON 1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON abc
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
INTCON 2
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
INTCON 3
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
INTCON 4
RPARENT )
SEMICN ;
RBRACE }
