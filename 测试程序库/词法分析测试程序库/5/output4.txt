CONSTTK const
INTTK int
IDENFR firstVar
ASSIGN =
INTCON 18373692
SEMICN ;
CONSTTK const
CHARTK char
IDENFR _myLucky
ASSIGN =
CHARCON Z
COMMA ,
IDENFR my12
ASSIGN =
CHARCON a
SEMICN ;
INTTK int
IDENFR secondVar
SEMICN ;
INTTK int
IDENFR calculateSome
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
INTTK int
IDENFR c
RPARENT )
LBRACE {
INTTK int
IDENFR temp
ASSIGN =
INTCON 0
SEMICN ;
CHARTK char
IDENFR nothing
COMMA ,
IDENFR blank
SEMICN ;
INTTK int
IDENFR result
LBRACK [
INTCON 5
RBRACK ]
SEMICN ;
INTTK int
IDENFR all
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 4
RBRACK ]
SEMICN ;
IDENFR temp
ASSIGN =
IDENFR a
PLUS +
IDENFR b
MINU -
IDENFR c
MULT *
IDENFR a
DIV /
IDENFR b
SEMICN ;
IDENFR result
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
IDENFR temp
SEMICN ;
IDENFR all
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
IDENFR temp
SEMICN ;
RETURNTK return
LPARENT (
IDENFR temp
RPARENT )
SEMICN ;
RBRACE }
CHARTK char
IDENFR substractChar
LPARENT (
CHARTK char
IDENFR input
RPARENT )
LBRACE {
INTTK int
IDENFR t
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR result
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR oneArray
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
SEMICN ;
INTTK int
IDENFR twoArray
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
RBRACE }
RBRACE }
SEMICN ;
RETURNTK return
LPARENT (
IDENFR input
RPARENT )
SEMICN ;
RBRACE }
INTTK int
IDENFR getRandNum
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
INTCON 123
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR blank_func
LPARENT (
RPARENT )
LBRACE {
RETURNTK return
SEMICN ;
RBRACE }
VOIDTK void
IDENFR blank
LPARENT (
RPARENT )
LBRACE {
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR p
ASSIGN =
PLUS +
INTCON 1
SEMICN ;
INTTK int
IDENFR q
ASSIGN =
INTCON 2
SEMICN ;
INTTK int
IDENFR m
ASSIGN =
INTCON 3
SEMICN ;
INTTK int
IDENFR store
SEMICN ;
INTTK int
IDENFR Giorni
SEMICN ;
INTTK int
IDENFR j
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR l
ASSIGN =
MINU -
INTCON 3
SEMICN ;
INTTK int
IDENFR n
SEMICN ;
CHARTK char
IDENFR s
SEMICN ;
IDENFR s
ASSIGN =
IDENFR substractChar
LPARENT (
CHARCON c
RPARENT )
SEMICN ;
IDENFR store
ASSIGN =
IDENFR calculateSome
LPARENT (
IDENFR p
COMMA ,
IDENFR q
COMMA ,
IDENFR m
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18373692
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR p
LSS <
IDENFR store
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON I'm the first line
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR q
LEQ <=
IDENFR store
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON b is no greater than store
RPARENT )
SEMICN ;
RBRACE }
ELSETK else
LBRACE {
PRINTFTK printf
LPARENT (
STRCON b is greater than store
RPARENT )
SEMICN ;
RBRACE }
IDENFR n
ASSIGN =
IDENFR l
PLUS +
INTCON 3
PLUS +
INTCON 2
SEMICN ;
IDENFR n
ASSIGN =
IDENFR l
MULT *
INTCON 3
MULT *
INTCON 2
SEMICN ;
IDENFR blank_func
LPARENT (
RPARENT )
SEMICN ;
IDENFR Giorni
ASSIGN =
MINU -
IDENFR p
PLUS +
INTCON 1
MINU -
INTCON 2
SEMICN ;
IDENFR Giorni
ASSIGN =
IDENFR Giorni
PLUS +
INTCON 5
SEMICN ;
WHILETK while
LPARENT (
IDENFR Giorni
GEQ >=
INTCON 1
RPARENT )
LBRACE {
IDENFR Giorni
ASSIGN =
IDENFR Giorni
MINU -
INTCON 1
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON I Giorni!
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR Giorni
EQL ==
INTCON 0
RPARENT )
SEMICN ;
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 3
SEMICN ;
IDENFR j
GRE >
INTCON 0
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
MINU -
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Ludovico yyds!
RPARENT )
SEMICN ;
RBRACE }
FORTK for
LPARENT (
IDENFR j
ASSIGN =
INTCON 1
SEMICN ;
IDENFR j
LSS <
INTCON 3
SEMICN ;
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Prelude!
RPARENT )
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON fairytale!
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON Berlin song!
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON Nefeli!
RPARENT )
SEMICN ;
RBRACE }
